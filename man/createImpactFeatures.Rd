% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createImpactFeatures.R
\name{createImpactFeatures}
\alias{createImpactFeatures}
\title{Generate impact encoded numeric variables for factor features.}
\usage{
createImpactFeatures(obj, target = character(0L), cols = NULL, fun = NULL)
}
\arguments{
\item{obj}{[\code{data.frame} | \code{\link{Task}}]\cr
Input data.}

\item{target}{[\code{character(1)}]\cr
Name(s) of the target variable(s).
Only used when \code{obj} is a data.frame, otherwise ignored.}

\item{cols}{[\code{character}]\cr
Columns to create impact features for. Default is to use all columns.}

\item{fun}{[\code{function}]\cr
Function to apply on the response for each factor level, should always return one numeric value.}
}
\value{
[\code{list}]\cr
  A list with two slots: \code{data}, containing either a \code{data.frame} or a \code{task},
  depending on the passed object. A list named \code{value.table} containing
  (named) numeric vectors of the replacement values.
}
\description{
Replace all factor features with impact encoded versions. The encoding is defined by \code{fun}.
\code{fun} is called for each level in a factor and operates on the target values of these observations.
For regression a common choice is \code{mean()}, i.e., replace each factor level with the average response.
For binary classification the probability for class one might be a good choice.
Missing factor levels are imputed by the mean of over all other replacements.
}
