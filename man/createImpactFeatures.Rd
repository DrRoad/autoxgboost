% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createImpactFeatures.R
\name{createImpactFeatures}
\alias{createImpactFeatures}
\title{Generate impact encoded numeric variables for factor features.}
\usage{
createImpactFeatures(obj, target = character(0L), cols = NULL, fun = NULL)
}
\arguments{
\item{obj}{[\code{data.frame} | \code{\link{Task}}]\cr
Input data.}

\item{target}{[\code{character(1)} | \code{character(2)} | \code{character(n.classes)}]\cr
Name(s) of the target variable(s).
Only used when \code{obj} is a data.frame, otherwise ignored.
If survival analysis is applicable, these are the names of the survival time and event columns,
so it has length 2.
For multilabel classification these are the names of logical columns that indicate whether
a class label is present and the number of target variables corresponds to the number of
classes.}

\item{cols}{[\code{character}]\cr
Columns to create impact features for. Default is to use all columns.}

\item{fun}{[\code{function}]\cr
Function to apply on the response for each factor level, should always return one numeric value.}
}
\value{
[\code{list}]\cr
  A list with two slot \code{data}, containing either a \code{data.frame} or a \code{task},
  depending on the object passed to the function. A list named \code{value.table} containing
  (named) numeric vectors of the replacement values.
}
\description{
Replace all factor features with impact encoded versions. The encoding is defined by fun.
\code{fun} is called for each level in a factor and operates on the target values of these observations.
For regression a common choice is \code{mean()}, i.e., replace each factor level with the average response.
For binary classification the probability for class one might be a good choice.
}
